from collections import OrderedDict
#normally, indexes of tuple, sets, lists is an integer

# here a dictionary provides a facility to specify what your index names are that means we can change type of indexes from integer to any type :)

# one element dictionary
# (KEY : VALUE) PAIR
groceries = {'banana': 5, 'oranges' : 3, 'apple':10}

# VALUES CAN BE ACCESS ONLY THROUGH THEIR KEY VALUES

print(groceries['oranges']) # output is 3

# get function

print(groceries.get("banana"))

print(groceries.get("python")) # output is None 'coz no python key in the dictionary 

# dictionary for phonebook

phonebook = {'Aryan': [884990992,'aryansaprajiit@gmail.com'],
  'rahul': 7288390300,
  'clever programmer': 6340012999,
  #dictionary inside dictionary
  'phonebook': {'phone':12344555, 'email':'aryansaprajiit@gmail.com'}
}

print(phonebook['phonebook'])
print() 
print(groceries.items())
print() 
print(groceries.keys())
print()    
print(groceries.values())
print() 

groceries.pop('banana') #delete the element having key = banana

print(groceries.items())

print()  
groceries.popitem()# pop out the last key-value pair from the dictionary
print(groceries.items())

groceries['pasta'] = 1 #add this key-value in the dictionary

print(groceries.items())

groceries.clear() # clear out the dictionary
print(groceries)#empty

#orignally dictonaries are unordered

# for ordered dictionary we include a library:
#from collections import OrdereDict in next repository
